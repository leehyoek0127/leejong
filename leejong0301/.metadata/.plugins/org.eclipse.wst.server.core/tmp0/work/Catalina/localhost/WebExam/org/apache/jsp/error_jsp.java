/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-02 06:26:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("body,\r\n");
      out.write("html {\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-family: 'Quicksand', sans-serif;\r\n");
      out.write("    font-weight: 400;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing {\r\n");
      out.write("    width: 320px;\r\n");
      out.write("    height: 200px;\r\n");
      out.write("    background-color: #3f3f3f;\r\n");
      out.write("    border: 1px solid #bbbbbb;\r\n");
      out.write("    border-radius: 6px 6px 4px 4px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing .topbar{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 12px;\r\n");
      out.write("    background-color: #f1f1f1;\r\n");
      out.write("    border-top-left-radius: 4px;\r\n");
      out.write("    border-top-right-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing .topbar div{\r\n");
      out.write("    height: 6px;\r\n");
      out.write("    width: 6px;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    margin: 3px;\r\n");
      out.write("    float: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing .topbar div.green{\r\n");
      out.write("    background-color: #60d060;\r\n");
      out.write("}\r\n");
      out.write(".writing .topbar div.red{\r\n");
      out.write("    background-color: red;\r\n");
      out.write("}\r\n");
      out.write(".writing .topbar div.yellow{\r\n");
      out.write("    background-color: #e6c015;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing .code {\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing .code ul {\r\n");
      out.write("    list-style: none;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writing .code ul li {\r\n");
      out.write("    background-color: #9e9e9e;\r\n");
      out.write("    width: 0;\r\n");
      out.write("    height: 7px;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    margin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("    display: -webkit-box;\r\n");
      out.write("    display: -ms-flexbox;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    -webkit-box-align: center;\r\n");
      out.write("        -ms-flex-align: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("    -webkit-box-pack: center;\r\n");
      out.write("        -ms-flex-pack: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    -webkit-transition: -webkit-transform .5s;\r\n");
      out.write("    transition: -webkit-transform .5s;\r\n");
      out.write("    transition: transform .5s;\r\n");
      out.write("    transition: transform .5s, -webkit-transform .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".stack-container {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    width: 420px;\r\n");
      out.write("    height: 210px;\r\n");
      out.write("    -webkit-transition: width 1s, height 1s;\r\n");
      out.write("    transition: width 1s, height 1s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pokeup {\r\n");
      out.write("    -webkit-transition: all .3s ease;\r\n");
      out.write("    transition: all .3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pokeup:hover {\r\n");
      out.write("    -webkit-transform: translateY(-10px);\r\n");
      out.write("            transform: translateY(-10px);\r\n");
      out.write("    -webkit-transition: .3s ease;\r\n");
      out.write("    transition: .3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".error {\r\n");
      out.write("    width: 400px;\r\n");
      out.write("    padding: 40px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error h1 {\r\n");
      out.write("    font-size: 125px;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-weight: 700;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error h2 {\r\n");
      out.write("    margin: -30px 0 0 0;\r\n");
      out.write("    padding: 0px;\r\n");
      out.write("    font-size: 47px;\r\n");
      out.write("    letter-spacing: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".perspec {\r\n");
      out.write("    -webkit-perspective: 1000px;\r\n");
      out.write("            perspective: 1000px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writeLine{\r\n");
      out.write("    -webkit-animation: writeLine .4s linear forwards;\r\n");
      out.write("            animation: writeLine .4s linear forwards;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".explode{\r\n");
      out.write("    -webkit-animation: explode .5s ease-in-out forwards;\r\n");
      out.write("            animation: explode .5s ease-in-out forwards;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card {\r\n");
      out.write("    -webkit-animation: tiltcard .5s ease-in-out 1s forwards;\r\n");
      out.write("            animation: tiltcard .5s ease-in-out 1s forwards;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@-webkit-keyframes tiltcard {\r\n");
      out.write("    0% {\r\n");
      out.write("        -webkit-transform: rotateY(0deg);\r\n");
      out.write("                transform: rotateY(0deg);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("        -webkit-transform: rotateY(-30deg);\r\n");
      out.write("                transform: rotateY(-30deg);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes tiltcard {\r\n");
      out.write("    0% {\r\n");
      out.write("        -webkit-transform: rotateY(0deg);\r\n");
      out.write("                transform: rotateY(0deg);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("        -webkit-transform: rotateY(-30deg);\r\n");
      out.write("                transform: rotateY(-30deg);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@-webkit-keyframes explode {\r\n");
      out.write("    0% {\r\n");
      out.write("        -webkit-transform: translate(0, 0) scale(1);\r\n");
      out.write("                transform: translate(0, 0) scale(1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("        -webkit-transform: translate(var(--spreaddist), var(--vertdist)) scale(var(--scaledist));\r\n");
      out.write("                transform: translate(var(--spreaddist), var(--vertdist)) scale(var(--scaledist));\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes explode {\r\n");
      out.write("    0% {\r\n");
      out.write("        -webkit-transform: translate(0, 0) scale(1);\r\n");
      out.write("                transform: translate(0, 0) scale(1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("        -webkit-transform: translate(var(--spreaddist), var(--vertdist)) scale(var(--scaledist));\r\n");
      out.write("                transform: translate(var(--spreaddist), var(--vertdist)) scale(var(--scaledist));\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@-webkit-keyframes writeLine {\r\n");
      out.write("    0% {\r\n");
      out.write("        width:0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("        width: var(--linelength);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes writeLine {\r\n");
      out.write("    0% {\r\n");
      out.write("        width:0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("        width: var(--linelength);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media screen and (max-width: 1000px) {\r\n");
      out.write("    .container {\r\n");
      out.write("      -webkit-transform: scale(.85);\r\n");
      out.write("              transform: scale(.85);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @media screen and (max-width: 850px) {\r\n");
      out.write("    .container {\r\n");
      out.write("      -webkit-transform: scale(.75);\r\n");
      out.write("              transform: scale(.75);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @media screen and (max-width: 775px) {\r\n");
      out.write("    .container {\r\n");
      out.write("      -ms-flex-wrap: wrap-reverse;\r\n");
      out.write("          flex-wrap: wrap-reverse;\r\n");
      out.write("      -webkit-box-align: inherit;\r\n");
      out.write("          -ms-flex-align: inherit;\r\n");
      out.write("              align-items: inherit;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @media screen and (max-width: 370px) {\r\n");
      out.write("    .container {\r\n");
      out.write("        -webkit-transform: scale(.6);\r\n");
      out.write("                transform: scale(.6);\r\n");
      out.write("      }\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("const stackContainer = document.querySelector('.stack-container');\r\n");
      out.write("const cardNodes = document.querySelectorAll('.card-container');\r\n");
      out.write("const perspecNodes = document.querySelectorAll('.perspec');\r\n");
      out.write("const perspec = document.querySelector('.perspec');\r\n");
      out.write("const card = document.querySelector('.card');\r\n");
      out.write("\r\n");
      out.write("let counter = stackContainer.children.length;\r\n");
      out.write("\r\n");
      out.write("//function to generate random number\r\n");
      out.write("function randomIntFromInterval(min, max) {\r\n");
      out.write("    return Math.floor(Math.random() * (max - min + 1) + min);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//after tilt animation, fire the explode animation\r\n");
      out.write("card.addEventListener('animationend', function () {\r\n");
      out.write("    perspecNodes.forEach(function (elem, index) {\r\n");
      out.write("        elem.classList.add('explode');\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//after explode animation do a bunch of stuff\r\n");
      out.write("perspec.addEventListener('animationend', function (e) {\r\n");
      out.write("    if (e.animationName === 'explode') {\r\n");
      out.write("        cardNodes.forEach(function (elem, index) {\r\n");
      out.write("\r\n");
      out.write("            //add hover animation class\r\n");
      out.write("            elem.classList.add('pokeup');\r\n");
      out.write("\r\n");
      out.write("            //add event listner to throw card on click\r\n");
      out.write("            elem.addEventListener('click', function () {\r\n");
      out.write("                let updown = [800, -800]\r\n");
      out.write("                let randomY = updown[Math.floor(Math.random() * updown.length)];\r\n");
      out.write("                let randomX = Math.floor(Math.random() * 1000) - 1000;\r\n");
      out.write("                elem.style.transform = `translate(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${randomX}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("px, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${randomY}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("px) rotate(-540deg)`\r\n");
      out.write("                elem.style.transition = \"transform 1s ease, opacity 2s\";\r\n");
      out.write("                elem.style.opacity = \"0\";\r\n");
      out.write("                counter--;\r\n");
      out.write("                if (counter === 0) {\r\n");
      out.write("                    stackContainer.style.width = \"0\";\r\n");
      out.write("                    stackContainer.style.height = \"0\";\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //generate random number of lines of code between 4 and 10 and add to each card\r\n");
      out.write("            let numLines = randomIntFromInterval(5, 10);\r\n");
      out.write("\r\n");
      out.write("            //loop through the lines and add them to the DOM\r\n");
      out.write("            for (let index = 0; index < numLines; index++) {\r\n");
      out.write("                let lineLength = randomIntFromInterval(25, 97);\r\n");
      out.write("                var node = document.createElement(\"li\");\r\n");
      out.write("                node.classList.add('node-' + index);\r\n");
      out.write("                elem.querySelector('.code ul').appendChild(node).setAttribute('style', '--linelength: ' + lineLength + '%;');\r\n");
      out.write("\r\n");
      out.write("                //draw lines of code 1 by 1\r\n");
      out.write("                if (index == 0) {\r\n");
      out.write("                    elem.querySelector('.code ul .node-' + index).classList.add('writeLine');\r\n");
      out.write("                } else {\r\n");
      out.write("                    elem.querySelector('.code ul .node-' + (index - 1)).addEventListener('animationend', function (e) {\r\n");
      out.write("                        elem.querySelector('.code ul .node-' + index).classList.add('writeLine');\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("        <div class=\"error\">\r\n");
      out.write("            <h1>500</h1>\r\n");
      out.write("            <h2>error</h2>\r\n");
      out.write("            <p><div style=\"font-size:17px;\">죄송합니다. 요청하신 페이지를 찾을 수 없습니다.<br/>\r\n");
      out.write("            입력하신 페이지의 경로가 정확한지 한번 더 확인 후 이용해 주시길 바랍니다.</div></p>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"stack-container\">\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"perspec\" style=\"--spreaddist: 125px; --scaledist: .75; --vertdist: -25px;\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"writing\">\r\n");
      out.write("                            <div class=\"topbar\">\r\n");
      out.write("                                <div class=\"red\"></div>\r\n");
      out.write("                                <div class=\"yellow\"></div>\r\n");
      out.write("                                <div class=\"green\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"code\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"perspec\" style=\"--spreaddist: 100px; --scaledist: .8; --vertdist: -20px;\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"writing\">\r\n");
      out.write("                            <div class=\"topbar\">\r\n");
      out.write("                                <div class=\"red\"></div>\r\n");
      out.write("                                <div class=\"yellow\"></div>\r\n");
      out.write("                                <div class=\"green\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"code\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"perspec\" style=\"--spreaddist:75px; --scaledist: .85; --vertdist: -15px;\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"writing\">\r\n");
      out.write("                            <div class=\"topbar\">\r\n");
      out.write("                                <div class=\"red\"></div>\r\n");
      out.write("                                <div class=\"yellow\"></div>\r\n");
      out.write("                                <div class=\"green\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"code\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"perspec\" style=\"--spreaddist: 50px; --scaledist: .9; --vertdist: -10px;\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"writing\">\r\n");
      out.write("                            <div class=\"topbar\">\r\n");
      out.write("                                <div class=\"red\"></div>\r\n");
      out.write("                                <div class=\"yellow\"></div>\r\n");
      out.write("                                <div class=\"green\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"code\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"perspec\" style=\"--spreaddist: 25px; --scaledist: .95; --vertdist: -5px;\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"writing\">\r\n");
      out.write("                            <div class=\"topbar\">\r\n");
      out.write("                                <div class=\"red\"></div>\r\n");
      out.write("                                <div class=\"yellow\"></div>\r\n");
      out.write("                                <div class=\"green\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"code\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"perspec\" style=\"--spreaddist: 0px; --scaledist: 1; --vertdist: 0px;\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"writing\">\r\n");
      out.write("                            <div class=\"topbar\">\r\n");
      out.write("                                <div class=\"red\"></div>\r\n");
      out.write("                                <div class=\"yellow\"></div>\r\n");
      out.write("                                <div class=\"green\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"code\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
