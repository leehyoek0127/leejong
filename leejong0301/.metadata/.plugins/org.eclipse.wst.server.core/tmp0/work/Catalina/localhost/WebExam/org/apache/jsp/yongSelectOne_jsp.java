/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-01 13:45:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.sql.*;
import vo.YonglistDto;
import dao.YonglistDao;
import java.util.ArrayList;

public final class yongSelectOne_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vo.YonglistDto");
    _jspx_imports_classes.add("dao.YonglistDao");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("UTF-8");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/signbutton.css\">\r\n");
      out.write("\r\n");
      dao.YonglistDao dao = null;
      dao = (dao.YonglistDao) _jspx_page_context.getAttribute("dao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dao == null){
        dao = new dao.YonglistDao();
        _jspx_page_context.setAttribute("dao", dao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

  YonglistDto YonglistNew = new YonglistDto();
  int index = Integer.parseInt(request.getParameter("index")); //글번호
  String yid = request.getParameter("yid"); //아이디
  YonglistDto one = dao.yongselectone(index, yid);
  String name = one.getY_b_name();

  String branch = one.getY_b_branch();
//  Date date = one.getyDate();
  String ground = one.getY_b_ground();
  String yTel0= one.getY_b_tel1(); //db에서 전화번호 받음
  String yTel1=yTel0.substring(0,3); 
  String yTel2;  
  if(yTel0.length()<=10){ // 전화번호 중간자리 반는법 3자리와 4자리가 있을수있음으로 두경우로 나눔
	  yTel2=yTel0.substring(3,6);
	  
  }else{     
		yTel2=yTel0.substring(3,7);
		
	}
  
  
  String yTel3= yTel0.substring(yTel0.length()-4, yTel0.length());

  
  String yApply = one.getY_b_status();
  String yTeam = one.getY_b_level();
  String contents = one.getY_b_contents();
  String matchdate = one.getY_b_schedule();
  String time = one.getY_b_time();
  
  
  
  
  

  
  

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/boardpop.css\">\r\n");
      out.write("<div id=\"popup");
      out.print(index);
      out.write(" overlay\" class=\"overlay\">\r\n");
      out.write("\t<div class=\"popup\" style=\"height:700px;\">\r\n");
      out.write("\t\t<h1 class=\"h_bar\">용병 게시글 상세조회</h1>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<table> \r\n");
      out.write("\t\t<colgroup>\r\n");
      out.write("\t\t\t<col class=\"t01\">\r\n");
      out.write("\t\t\t<col width=\"\">\r\n");
      out.write("\t\t\t<col class=\"t01\">\r\n");
      out.write("\t\t\t<col width=\"\">\r\n");
      out.write("\t\t</colgroup>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th scope=\"row\">작성자</th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\">");
      out.print(name );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<th scope=\"row\">지점 </th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\">");
      out.print(branch );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr> \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th scope=\"row\">매치일자</th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\" colspan=\"3\">");
      out.print(matchdate);
      out.write(" </td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th scope=\"row\">구장</th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\" colspan=\"3\">");
      out.print(ground );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr> \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th scope=\"row\">연락처</th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\">");
      out.print(yTel1 );
      out.write('-');
      out.print(yTel2 );
      out.write('-');
      out.print(yTel3 );
      out.write("</td> \r\n");
      out.write("\t\t\t\t<th scope=\"row\">팀 수준</th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\">");
      out.print(yTeam );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th scope=\"row\">구인가능여부</th>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\" colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"state\">");
      out.print(yApply );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"al_left\" colspan=\"4\" style=\"height:50px;\"><textarea readonly>");
      out.print(contents );
      out.write("</textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\t<input class=\"signbutton signbutton5\" type=\"button\" id=\"edit\" name=\"edit\" value=\"수정\" style=\"font-size: 15px; width: 49%; height:80px;margin-top: 10px;\"\r\n");
      out.write("\t\t\tonclick=\"script: location.href='yongedit.jsp?index=");
      out.print(index);
      out.write("&id=");
      out.print(yid);
      out.write("&edit=1';\">\r\n");
      out.write("\t\t\t<input class=\"signbutton signbutton5\" type=\"button\"  id=\"delete\" value=\"삭제\"  name=\"delete\"\r\n");
      out.write("\t\t\tstyle=\"font-size: 15px; width: 49%; height:80px;\"\r\n");
      out.write("\t\t\tonClick=\"location.href='yongedit.jsp?index=");
      out.print(index);
      out.write("&id=");
      out.print(yid);
      out.write("&delete=1';\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<a class=\"close\" onclick=\"close1();\">&times;</a>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction delete1() {\r\n");
      out.write("\t\t//Yonglist게시글딜리트하는 dao 호출문 매개변수는 qNo\r\n");
      out.write("\t\tlocation.href=\"yonglist_1.jsp\";\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction close1() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#innerpop\").html(\"\");\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");

//YonglistDao dao2 = new YonglistDao();
//ArrayList<YonglistDto> arraylist = new ArrayList<YonglistDto> ();
//ArrayList<YonglistDto> list = dao.selectAll();	//리스트 담아왔다.
//dao.insert(arraylist);

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
