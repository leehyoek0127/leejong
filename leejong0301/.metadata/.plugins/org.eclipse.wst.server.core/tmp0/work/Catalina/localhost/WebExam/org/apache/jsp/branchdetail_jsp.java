/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-01 13:38:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.BranchDto;
import model.GroundDto;
import java.util.ArrayList;

public final class branchdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.BranchDto");
    _jspx_imports_classes.add("model.GroundDto");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ArrayList<BranchDto> BranchList = (ArrayList<BranchDto>) request.getAttribute("BranchList");
	ArrayList<GroundDto> GroundList = (ArrayList<GroundDto>) request.getAttribute("GroundList");
	String[] convenarr = BranchList.get(0).getBranch_convenience().split(",");
	String[] picarr = GroundList.get(0).getGround_pic().split(",");

      out.write('\r');
      out.write('\n');

	//2020_01_02 수정부분
	String url = request.getServletPath();
	session.setAttribute("url", url);
	String includeurl = "header.jsp";
	String uss = (String) session.getAttribute("id");
	String log = "로그인";
	if (uss == null)
		uss = "GUEST";
	else {
		log = "로그아웃";
		includeurl = "sign_login.jsp";
	}
	//수정부분 끝

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"Generator\" content=\"EditPlus®\">\r\n");
      out.write("<meta name=\"Author\" content=\"\">\r\n");
      out.write("<meta name=\"Keywords\" content=\"\">\r\n");
      out.write("<meta name=\"Description\" content=\"\">\r\n");
      out.write("<title>지점소개</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-ui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/datepicker.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/common.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/common/form_check.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css\\find.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/signbutton.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/branchdetail.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/find.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/classic.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/classic.date.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/classic.time.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/footer.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style2.css\" media=\"screen\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/borderRightLeft.css\" media=\"screen\">\r\n");
      out.write("<script src=\"js/materialForm.js\"></script>\r\n");
      out.write("<!--기본적인 body등의 css-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/basicStyle.css\" media=\"screen\">\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<!-- 부가적인 테마 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.infinitecarousel.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!----------------------------서브메뉴마우스오버기능-------------------------->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/subMenuMouseOver.css\">\r\n");
      out.write("<!----------------------------회원가입스크립트랑 스타일(따로 빼면 에러)-------------------------->\r\n");
      out.write("<script type='text/javascript'>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$('#forgot_username_link').tipsy({\r\n");
      out.write("\t\t\tgravity : 'w'\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<link href=\"css/front.css\" media=\"screen, projection\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"js/jquery2.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t$(\".signin\").click(function(e) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t$(\"fieldset#signin_menu\").toggle();\r\n");
      out.write("\t\t\t$(\".signin\").toggleClass(\"menu-open\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"fieldset#signin_menu\").mouseup(function() {\r\n");
      out.write("\t\t\treturn false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(document).mouseup(function(e) {\r\n");
      out.write("\t\t\tif ($(e.target).parent(\"a.signin\").length == 0) {\r\n");
      out.write("\t\t\t\t$(\".signin\").removeClass(\"menu-open\");\r\n");
      out.write("\t\t\t\t$(\"fieldset#signin_menu\").hide();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<!----------------------------회원가입스크립트랑 스타일여기까지------------------------------------>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tvar shrinkHeader = 30;\r\n");
      out.write("\t\tvar shrinkhollow = 465;\r\n");
      out.write("\t\t$(window).scroll(function() {\r\n");
      out.write("\t\t\tvar scroll = getCurrentScroll();\r\n");
      out.write("\t\t\tif (scroll >= shrinkHeader) {\r\n");
      out.write("\t\t\t\t$('#navtop').addClass('shrink');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('#navtop').removeClass('shrink');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (scroll >= shrinkhollow) {\r\n");
      out.write("\t\t\t\t$('#navtop').addClass('shrinkhollow');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('#navtop').removeClass('shrinkhollow');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tfunction getCurrentScroll() {\r\n");
      out.write("\t\t\treturn window.pageYOffset || document.documentElement.scrollTop;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- --------- -->\r\n");
      out.write("<!-- 한글글씨체적용 /아이디찾기 제목-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/galboardstyle.css\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Black+Han+Sans&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- 닫기가 가능한 커스텀 오버레이 -->\r\n");
      out.write("<style>\r\n");
      out.write("    .wrap {position: absolute;left: 0;bottom: 40px;width: 288px;height: 102px;margin-left: -144px;text-align: left;overflow: hidden;font-size: 14px;font-family: 'Malgun Gothic', dotum, '돋움', sans-serif;line-height: 1.5;}\r\n");
      out.write("    .wrap * {padding: 0;margin: 0;}\r\n");
      out.write("    .wrap .info {width: 286px;height: 90px;border-radius: 5px;border-bottom: 2px solid #ccc;border-right: 1px solid #ccc;overflow: hidden;background: #fff;}\r\n");
      out.write("    .wrap .info:nth-child(1) {border: 0;box-shadow: 0px 1px 2px #888;}\r\n");
      out.write("    .info .title {padding: 5px 0 0 10px;height: 30px;background: #eee;border-bottom: 1px solid #ddd;font-size: 16px;font-weight: bold;}\r\n");
      out.write("    .info .close {position: absolute;top: 10px;right: 10px;color: #888;width: 17px;height: 17px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/overlay_close.png');}\r\n");
      out.write("    .info .close:hover {cursor: pointer;}\r\n");
      out.write("    .info .body {position: relative;overflow: hidden;}\r\n");
      out.write("    .info .desc {position: relative;margin: 20px 0 0 25px;height: 75px;}\r\n");
      out.write("    .desc .ellipsis {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}\r\n");
      out.write("    .desc .jibun {font-size: 11px;color: #888;margin-top: -2px;}\r\n");
      out.write("    .info:after {content: '';position: absolute;margin-left: -12px;left: 50%;bottom: 0;width: 22px;height: 12px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 이미지 슬라이더 -->\r\n");
      out.write(" <style>\r\n");
      out.write("\r\n");
      out.write("body { background-color: #fff; color: #000; padding: 0; margin: 0; }\r\n");
      out.write("\r\n");
      out.write(".container { width: 1170px; margin: auto; padding-top: 1em; }\r\n");
      out.write("\r\n");
      out.write(".container .ism-slider { margin-left: auto; margin-right: auto; }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/my-slider.css\"/>\r\n");
      out.write("<script src=\"js/myslider.js\"></script>\r\n");
      out.write("<!-- ---------- -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, includeurl, out, false);
      out.write("\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<div id=\"mainleft\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"leftbanner\">\r\n");
      out.write("\t\t\t<div id=\"banner1\">\r\n");
      out.write("\t\t\t\t<img src=\"img/20191211.jpg\" width=\"100%\" height=\"100%\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"banner3\">\r\n");
      out.write("\t\t\t\t<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d25325.265446899888!2d127.02924799651784!3d37.492391917303266!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x357ca5bed583f92d%3A0xc93c837d2875ade6!2z7ZKL7IK07J6l!5e0!3m2!1sko!2skr!4v1575961834128!5m2!1sko!2skr\" width=\"100%\" height=\"100%\" frameborder=\"0\" style=\"border: 0;\" allowfullscreen=\"\"></iframe>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<section id=\"main\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<section id=\"mainright\">\r\n");
      out.write("\t\t\t<div id=\"matList\">\r\n");
      out.write("\t\t\t\t<div class=\"container\" id=\"formOutterWrapper\">\r\n");
      out.write("\t\t\t\t\t<center>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"writeboardtitle\" style=\"text-align: center; font-size: 45px; margin-bottom: 70px;\">시설 상세정보</div>\r\n");
      out.write("\t\t\t\t\t</center>\r\n");
      out.write("\t\t\t\t\t<!-- @@@@@@@@@@이미지슬라이더진짜22 -->\r\n");
      out.write("\t\t\t\t\t<div class='container'>\r\n");
      out.write("<div class=\"ism-slider\" data-transition_type=\"fade\" data-interval=\"10000\" id=\"my-slider\">\r\n");
      out.write("  <ol>\r\n");
      out.write("    ");

								if (BranchList != null && GroundList != null) {
									for (int i = 0; i < picarr.length; i++) {
							
      out.write("\r\n");
      out.write("    <li>\r\n");
      out.write("   \r\n");
      out.write("      <img src=\"img/");
      out.print(picarr[i]);
      out.write("\" style=\"width: 1170px; height: 448px;\" />\r\n");
      out.write("      \r\n");
      out.write("    </li>\r\n");
      out.write("    ");

									}}
      
      out.write("\r\n");
      out.write("  </ol>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t");

							if (BranchList != null && GroundList != null) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colsplan=\"2\" class=\"branchnamebig\">");
      out.print(BranchList.get(0).getBranch_name());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colsplan=\"2\" class=\"branchsubject\"><img src=\"img/iconlocation.png\" style=\"width: 24px; height: 24px; margin-right: 10px;\">지점주소</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colsplan=\"2\" class=\"telfont\">");
      out.print(BranchList.get(0).getBranch_location());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colsplan=\"2\" class=\"branchsubject\"><img src=\"img/iconphone.png\" style=\"width: 24px; height: 24px; margin-right: 10px;\">문의전화</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colsplan=\"2\" class=\"telfont\">");
      out.print(BranchList.get(0).getBranch_tel());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"tdbranch3\"><pre class=\"prebranch4\">\r\n");
      out.write("<label style=\"float: left; font-size: 20px; font-weight: bold; color: #a7a7a7d9;\">■ 구장안내</label>\r\n");

								for (int i = 0; i < GroundList.size(); i++) {
							
      out.write("\r\n");
      out.write("\r\n");
      out.print(GroundList.get(i).getGround_name());
      out.write("구장 : (");
      out.print(GroundList.get(i).getGround_size());
      out.write(')');
      out.write('\r');
      out.write('\n');

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<label style=\"float: left; font-size: 20px; font-weight: bold; color: #a7a7a7d9;\">■ 편의시설</label>\r\n");
      out.write("<div style=\"display: inline-flex;margin-left: -98px;margin-top: 20px;\">\r\n");
      out.write("<img src=");
if (convenarr[0].contains("o")) {
      out.write(" \"img/parking_o.png\"");
} else if (convenarr[0].contains("x")) {
      out.write("\"img/parking_x.png\"");
}
      out.write(" alt=\"주차장\" class=\"branchdetailicon\" />\r\n");
      out.write("<img src=");
if (convenarr[1].contains("o")) {
      out.write(" \"img/aircon_o.png\"");
} else if (convenarr[1].contains("x")) {
      out.write("\"img/aircon_x.png\"");
}
      out.write(" alt=\"냉난방\" class=\"branchdetailicon\" />\r\n");
      out.write("<img src=");
if (convenarr[2].contains("o")) {
      out.write(" \"img/shower_o.png\"");
} else if (convenarr[2].contains("x")) {
      out.write("\"img/shower_x.png\"");
}
      out.write(" alt=\"샤워실\" class=\"branchdetailicon\" />\r\n");
      out.write("<img src=");
if (convenarr[3].contains("o")) {
      out.write(" \"img/ball_o.png\"");
} else if (convenarr[3].contains("x")) {
      out.write("\"img/ball_x.png\"");
}
      out.write(" alt=\"공대여\" class=\"branchdetailicon\" />\r\n");
      out.write("<img src=");
if (convenarr[4].contains("o")) {
      out.write(" \"img/vest_o.png\"");
} else if (convenarr[4].contains("x")) {
      out.write("\"img/vest_x.png\"");
}
      out.write(" alt=\"팀조끼대여\" class=\"branchdetailicon\" />\r\n");
      out.write("<img src=");
if (convenarr[5].contains("o")) {
      out.write(" \"img/shoes_o.png\"");
} else if (convenarr[5].contains("x")) {
      out.write("\"img/shoes_x.png\"");
}
      out.write(" alt=\"풋살화대여\" class=\"branchdetailicon\" />\r\n");
      out.write("</div>\r\n");
      out.write("</pre></td>\r\n");
      out.write("\r\n");
      out.write("<td style=\"float: left;\"><pre class=\"prebranch3\">\r\n");
      out.write("<label style=\"float: left; font-size: 20px; font-weight: bold; color: #a7a7a7d9;\">■ 예약비용 </label>\r\n");

									for (int i = 0; i < GroundList.size(); i++) {
								
      out.write('\r');
      out.write('\n');
      out.write('▷');
      out.print(GroundList.get(i).getGround_name());
      out.write(' ');
      out.write('(');
      out.print(GroundList.get(i).getGround_field());
      out.write(')');
      out.write(' ');
      out.write('(');
      out.print(GroundList.get(i).getGround_size());
      out.write(")\r\n");
      out.write("<div style=\"font-size: 15px;\">평일주간 (10:00~18:00) : ");
      out.print(GroundList.get(i).getGround_weekdaydaytime_charge());
      out.write("원\r\n");
      out.write("평일야간 (18:00~24:00) : ");
      out.print(GroundList.get(i).getGround_weekdaynight_charge());
      out.write("원\r\n");
      out.write("주말, 공휴일주간 (10:00~18:00) : ");
      out.print(GroundList.get(i).getGround_weekenddaytime_charge());
      out.write("원\r\n");
      out.write("주말, 공휴일야간 (18:00~24:00) : ");
      out.print(GroundList.get(i).getGround_weekendnight_charge());
      out.write('원');
      out.write('\r');
      out.write('\n');

									}
								
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</pre></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colsplan=\"2\"><label style=\"float: left; font-size: 20px; font-weight: bold; color: #a7a7a7d9;\">■ 위치안내</label> <br> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"map\" style=\"width: 1180px; height: 550px; margin-bottom:40px;\"></div> <script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=2dcf6e7e6b9117069f51425f20cfe014&libraries=services\"></script>\r\n");

 for (int i = 0; i < BranchList.size(); i++) {
 
      out.write(" <script>\r\n");
      out.write("\t\tvar container = document.getElementById('map');\r\n");
      out.write("\t\tvar options = {\r\n");
      out.write("\t\t\tcenter: new kakao.maps.LatLng(33.450701, 126.570667),\r\n");
      out.write("\t\t\tlevel: 3\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tvar map = new kakao.maps.Map(container, options);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 지도에 확대 축소 컨트롤을 생성한다\r\n");
      out.write("\t\tvar zoomControl = new kakao.maps.ZoomControl();\r\n");
      out.write("\r\n");
      out.write("\t\t// 지도의 우측에 확대 축소 컨트롤을 추가한다\r\n");
      out.write("\t\tmap.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 주소-좌표 변환 객체를 생성합니다\r\n");
      out.write("\t\tvar geocoder = new kakao.maps.services.Geocoder();\r\n");
      out.write("\t\t// 주소로 좌표를 검색합니다\r\n");
      out.write("\t\tgeocoder.addressSearch('");
      out.print(BranchList.get(i).getBranch_location());
      out.write("', function(result, status) {\r\n");
      out.write("\t\t    // 정상적으로 검색이 완료됐으면 \r\n");
      out.write("\t\t     if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("\t\t        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n");
      out.write("\r\n");
      out.write("\t\t        // 결과값으로 받은 위치를 마커로 표시합니다\r\n");
      out.write("\t\t        var marker = new kakao.maps.Marker({\r\n");
      out.write("\t\t            map: map,\r\n");
      out.write("\t\t            position: coords\r\n");
      out.write("\t\t        });\r\n");
      out.write("\r\n");
      out.write("\t\t     // 커스텀 오버레이는 아래와 같이 사용자가 자유롭게 컨텐츠를 구성하고 이벤트를 제어할 수 있기 때문에\r\n");
      out.write("\t\t     // 별도의 이벤트 메소드를 제공하지 않습니다 \r\n");
      out.write("\t\t     var content = '<div class=\"wrap\">' + \r\n");
      out.write("\t\t                 '    <div class=\"info\">' + \r\n");
      out.write("\t\t                 '        <div class=\"title\">' + \r\n");
      out.write("\t\t                 '            ");
      out.print(BranchList.get(i).getBranch_name());
      out.write("' + \r\n");
      out.write("\t\t                 '            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\"></div>' + \r\n");
      out.write("\t\t                 '        </div>' + \r\n");
      out.write("\t\t                 '        <div class=\"body\">' + \r\n");
      out.write("\t\t                 '            <div class=\"desc\">' + \r\n");
      out.write("\t\t                 '                <div class=\"ellipsis\">");
      out.print(BranchList.get(i).getBranch_location());
      out.write("</div>' + \r\n");
      out.write("\t\t                 '                </div>' + \r\n");
      out.write("\t\t                 '        </div>' + \r\n");
      out.write("\t\t                 '    </div>' +    \r\n");
      out.write("\t\t                 '</div>';\r\n");
      out.write("\r\n");
      out.write("\t\t     // 마커 위에 커스텀오버레이를 표시합니다\r\n");
      out.write("\t\t     // 마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다\r\n");
      out.write("\t\t     var overlay = new kakao.maps.CustomOverlay({\r\n");
      out.write("\t\t         content: content,\r\n");
      out.write("\t\t         map: map,\r\n");
      out.write("\t\t         position: marker.getPosition()       \r\n");
      out.write("\t\t     });\r\n");
      out.write("\r\n");
      out.write("\t\t     // 마커를 클릭했을 때 커스텀 오버레이를 표시합니다\r\n");
      out.write("\t\t     kakao.maps.event.addListener(marker, 'click', function() {\r\n");
      out.write("\t\t         overlay.setMap(map);\r\n");
      out.write("\t\t     });\r\n");
      out.write("\r\n");
      out.write("\t\t     // 커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \r\n");
      out.write("\t\t     function closeOverlay() {\r\n");
      out.write("\t\t         overlay.setMap(null);     \r\n");
      out.write("\t\t     }\r\n");
      out.write("\t\t        \r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n");
      out.write("\t\t\t\tmap.setCenter(coords);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t</script> \r\n");
      out.write("\t");

 	}
 
      out.write("\r\n");
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"tdbranch1\"><pre class=\"prebranch1\">\t\r\n");
      out.write("<label style=\"font-size: 20px; font-weight: bold; margin-top: -24px; color: #a7a7a7d9;\">■ 안내사항/이용규칙</label>\r\n");
      out.print(GroundList.get(0).getGround_rule());
      out.write("\r\n");
      out.write("</pre></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"tdbranch2\"><pre class=\"prebranch2\">\r\n");
      out.write("<label style=\"font-size: 20px; font-weight: bold; margin-top: -10px; color: #a7a7a7d9;\">■ 환불규정</label>\r\n");
      out.write("\r\n");
      out.write("- 이용 5일 전까지 : 100% 환불\r\n");
      out.write("- 4일 전 ~ 3일 전: 50% 환불\r\n");
      out.write("- 2일 전 ~ 대관 당일 : 환불 불가\r\n");
      out.write("\r\n");
      out.write("** 해당 환불 규정은 구장 이용 날짜(대관 날짜)를 기준으로 합니다.\r\n");
      out.write("\r\n");
      out.write("** 날짜변경은 상단 환불 규정 기준 100% 환불인 경우에만 가능합니다.\r\n");
      out.write("그 외에는 변경이 불가능합니다. (1회 한정)\r\n");
      out.write("\r\n");
      out.write("** 1회 이상 날짜변경된 예약건은 환불 처리가 불가능 합니다.\r\n");
      out.write("\r\n");
      out.write("** 다음과 같은 경우에는 <b style=\"color: #ff3c28;\">상단 규정</b>대로만 처리되니\r\n");
      out.write("구장 예약은 <b style=\"color: #4285f4;\">신중</b>하게 진행해주시길 바랍니다.\r\n");
      out.write("\r\n");
      out.write("-> 이용자의 사정으로 예약된 날짜에 구장 이용을 하지 못하는 경우\r\n");
      out.write("-> 구장, 날짜, 시간 등을 실수로 잘못 선택하였을 경우\r\n");
      out.write("-> 단순변심으로 인하여 환불 혹은 날짜 / 시간변경을 요청하는 경우\r\n");
      out.write("\t\t\t\t\t</pre></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t");

 							for (int i = 0; i < BranchList.size(); i++) {
 							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<td colsplan=\"2\"><input type=\"button\" value=\"대관하기\" onClick=\"script: location.href='branchlist.do?command=reservationclick&branch_no=");
      out.print(BranchList.get(i).getBranch_no());
      out.write("'\" style=\"float: right;width: 150px;height: 55px;font-size: 18px;letter-spacing: 3px;color: white; background-color: #2c5d88;border-radius: 5px;border: none;margin-top: 28px; margin-bottom: 34px;\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t");

 							} }
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<script src=\"https://code.jquery.com/jquery-2.2.3.min.js\" integrity=\"sha256-a23g1Nt4dtEYOj7bR+vTu7+T8VP13humZFBJNIYoEJo=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t\t\t\t<script src=\"js/materialForm.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<footer id=\"footer\">\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
