1. 변수
 - 자료 저장 장소(입력과 처리의 중간에 사용)
ㄴ 입력 - 처리 - 결과(출력)
int , double , char , String(두개이상의글자)


3. 제어문
-프로그램 흐름(방향)

1)조건문
- if , switch
* if

2)반복문
- for , while , do~while
*for : 반복범위(횟수) 지정 //비밀번호 틀렸을때 다시입력횟수제한 주는게for문
형식) for(초기값 ; 조건식 ; 증감식)
      {
	
      }

*while : 조건에 만족하는 동안~
형식) while(조건식)
{
실행문장
}


3)분기문
 - 반복문 제어
 - break : 반복문을 강제로 종료 ,
   continue : 반복 건너뛰기




124 35순서로
1. 스위치문
2. 


5. 두개의 숫자를 입력받는다. 3, 5를 입력받게 되면 구구단 3, 4, 5단출력
단, 음수를 입력하거나 또는 5, 3입력이 되거나 1~9숫자 범위를 넘어가는 경우
출력x, 다시입력받기

======================================================================================================
11/11 월요일
UseArgs 안쓰는거지만 설명 듣기: cmd로 실행하면 main메소드에 입력할수있다
Maximum구하기
ReLocation 하기
DaysTotal 구하기

*메소드: function(c언어명칭), 함수...(등등 다 같은 의미)
-프로그램 단위(기능)

println<<<<<이것도 메소드이다.()안에넣은 값을 상수로 받아서 반환한다.

형식) 반환형 메소드명(매개변수1, 매개변수2, ...) //인자or인수라고도 부른다.//(ex. int m3, m4 는 오류)->int m3, int m4 로 써야한다
      {
	
      }

*main메소드는 호출할 수 없다.
*main에서 다른 메소드를 호출할때는 매개변수를 이용.
*main이 아닌 다른 메소드에서 메인으로 뭔가를 전달하고싶으면 return사용

======================================================================================================
11/12 화요일
*변수02 ---->변수2 //변수뒤에 숫자 붙일때는 0은 빼고 쓴다
*메소드반환값 있으면 ********무조건**********변수선언해서 받아줘야한다!!!!!!!!!!!
*return은 메소드당 하나만 가능하다. //return a, b, c...<<<이런건 error!!
boolean은 불리언or 부울이라고 말하더라
OverLoading
*가변인자 Method1112_3

*객체지향
객체는 실체가 없다:추상적인 개념
파일명은 main메소드 있는 클래스명으로 한다.
계좌관리만들기
성적관리만들기

constructor(생성자)는 객체가 생성되는순간 딱 한번 호출된다. 두번은x
class와 이름이 같다.(맨앞 대문자까지 같다)
반환타입 적을 자리가 없다.(void도 빼고 아예 비워둔다)


static붙어있는 변수는 클래스명.x <<<이런식으로 쓴다
static double rate; //은행 이율은 모두에게 동일하니까 이럴때 쓰자

********Math.random(); <<반환값이 static double이라서 함수앞에 클래스명을 붙인거다.

*********객체배열 만들때는 new를 두번써야한다.****************************************
new로 배열초기화 먼저 만들고(이때는 null)
for문으로 하나씩 돌리면서 new다시 써서 객체생성해준다(이때는 object값으로 나온다.
즉, 위에 쓴 두개의 new가 의미와 쓰임이 다르다.
그리고 생성자는 당연히 두번째에 쓴 new가 객체생성이니까 그때 호출된다.
**************************************************************************************
======================================================================================================
11/13 수요일
객체배열을 객체변수 크기에 따라 재정렬하기
main메소드가있는 클래스는 상속받거나 그런거 하지 않는다.
다른 클래스끼리만 한다

상속관계
다형성<>확장성 : 반대개념

main있는 클래스는 보통 public을 붙인다.

**자식클래스(B클래스) 호출하면 B클래스의 부모클래스A의 생성자가 먼저 호출되고 그 다음 B생성자가 호출된다.

부모클래스에 int x;
자식클래스에 int x;
이럴경우 super.x는 부모x // this.x는 자식x

***********************오버로딩은 한 클래스안에서만 가능하다. 

오버라이딩은 예를들면 자바의 기존 메소드가 마음에 들지 않을때 바꾸는것이다


*****************************interface*************************************************
interface는 java에서 다중상속을 가능하게함: class B extends A implements C{}
implements:구현
원래는 java에서 다중상속x:부모가 여러명인건 불가능하다.
계층상속은 가능(할머니메소드)
but 다중상속이 포인트는 아니다
interface에는
클래스하나만 상속받으면 아쉬운 상황이 있을수있어서 쓴다

메소드는 기능이 없다!<-abstract(추상) ex) void me();  <<<<<<<<<<void me(){}는 xxxxxx
ㄴ재정의를 해야 사용가능!!
interface끼리는 상속가능
★★★★★★★★재정의할때는 똑같이 쓰지만 앞에 public을 꼭 써주자! 안 써져있어도 public이 생략되어있다.★★★★★★★★
예제에서 error가 나오면 꼭 읽어보자.

***************************************************************************************
======================================================================================================
11/14 목요일
******final******
final int A=123;
A=456; <<error: final은 상수(변하지않는수)라서 새로 대입하면 error
//상수는 대문자로 쓰는게 보통이다.
final int A;
A=123; <<error: final은 선언과 대입을 따로하면 error

메소드에서는 (접근제한자)와 (반환값)의 사이에 쓴다.<< 재정의 불가!!
클래스에서는 extends 불가능!!(객체생성은 가능하다)

******************************abstract(추상적)*****************************************
-메소드-
sub class에서 재정의 하기 위한 존재
-클래스-
abstract class는 생성x //단지 Super가 되기 위해 존재함 ex)

******abstract class <<>> interface******차이점!!
abstact클래스 안의 메소드는 abstarct를 생략할수없다.

*상속관계있는 클래스의 객체를 만들때는 부모클래스로 객체를 선언하자. 초기화는 자식클래스 아무거나
***************************************************************************************

****************************Collection(자료수집)***************************************
반복문은 문장이 줄어들지만 속도가 빨라지는건 아니다. 그래서 속도를 빠르게 하기위해 컬렉션을 쓴다
boxing 뜻: 기본자료타입을 오브젝트타입으로 변환하는것: 나중에 int형 못 쓰는 경우가 생길때 쓴다
unboxing 뜻: 오브젝트타입을 기본자료타입으로 변환하는것
*java.lang은 import 없어도 쓴다 : import java.lang<<이 항상 생략되어있다.



+++++++++++++++++++++++ArrayList+++++++++++++++++++++++
import java.util.ArrayList;
ArrayList<String> list = new ArrayList<String>(6); <<객체 선언, 생성
<E>자리에 Object쓰면 모든 오브젝트타입 가능 but 나중에 사용하기 힘들어서 비추

java.util.ArrayList<E>
ㄴ이런거에 <E>붙은건 제네릭타입이라 하며 속에 자료형을 적어준다.//여기는 오브젝트타입만 들어간다.
배열이랑 다르게 공간

ArrayList<Integer> arrl=new ArrayList<Integer>(5); <>안에 오브젝트타입을 적는다(기본자료타입 불가능)
--------ArrayList 자주 쓰는 메소드--------
리스트.add(int index,E) : 몇번째에 오브젝트객체를 넣는다.//index생략하면 0번부터 들어감
리스트.size() : 요소수를 반환
리스트.remove(int index): index번째 E를 지운다.
★★★★★★★★set은 뭔가를 설정한다는 뜻//get은 뭔가를 가져오겠다는 뜻★★★★★★★★
리스트.set(int index,E):index번째를 E로 초기화한다.
리스트.get(int index) : index번째 E를 반환한다. //for문 출력할때 쓰면 좋음
Collections.sort(E가들어있는리스트): List의 E를 서로 비교해서 오름차순으로 정렬한다.

리스트1.containAll(리스트2): AbstractCollection클래스를 상속받음. 리스트1을 2와 비교해서 boolean으로 반환한다.
리스트.contains(E): 리스트에 E가 있으면 ture E가 없으면 false를 반환한다. for문으로 E자리에 다른리스트.get(i)로도 쓴다.
리스트1.retainAll(리스트2): list1의 요소중 list2와 비교해서 있는것만 남긴다.
리스트.subList(int fromindex,int toindex): from부터to까지E를 List<E>형태로 반환한다.//새로운리스트에 바로 초기화가능

===============
add	=끼워넣기
remove	=지우기
get	=꺼내기
set	=바꾸기
size	=길이
contains=속에있냐
containAll=속에'다'있냐
retainAll=속에없는건지우기
subList=어디서어디까지복사
sort	=오름차순
===============
★★★★★★★★문제를 쪼개고 쪼개서 생각하면 답이 나온다★★★★★★★★

리스트는 순서가 중요
맵은 자료가 중요

*졸려서 빠진거 좀 있음ㅠㅠHashmap이랑 ArrayList를 상속으로 쓰는거랑..
======================================================================================================
11/15 금요일
eclipse.org

학생들의 성적관리
틀을 제작
이름
국어
영어
수학
총점
평균



MVC
M:모델링(설계)
V:뷰 결과출력
C:진행 <<---------main이 컨트롤할것

set메소드를 왜 만들까?
ㄴuserinfo에 변수들을 그 클래스 안에서만 쓰도록 private로 써야 코딩이 매끄럽다.
private로 쓰면 다른 클래스에서 input할때 못 쓰니까 set/get메소드를 쓴다.
======================================================================================================
11/18 월요일
Exception
try{}catch{}...finally{}
문법적인 오류는 컴파일러가 잡아준다.
throws : 이 메소드 전체에 try있다는 뜻

IO :input,output <<자료에 관한 이야기
파일 입출력
프로그램이 끝나면 데이터가 없어지는데 계속 쓰고싶을때 자료를 외부파일에 저장해두고 다시 쓸때 불러옴
입출력하는 메소드는 예외처리를 꼭 해야한다.

f=new FileOutputStream(""); <<열기
f.write(); <<쓰기
f.close(); <<닫기 : finally부분에 써서 닫아줘야한다. why? 열어두면 다른프로그램으로 영향받는다.




회원가입 프로그램

아이디
비밀번호
비밀번호재확인
이름
생년월일
성별
본인확인이메일
전화번호



1. 회원가입
2. 회원정보확인(본인정보확인)
3. 전체회원정보
4. 종료

//외부파일에 넣어야함
======================================================================================================
11/19 화요일



40
56
57
64

======================================================================================================
DB
show Database;	//데이터베이스목록 보여줘
use 데이터베이스명;	//데이터베이스로 들어가

show tables;	//테이블목록 보여줘

create , alter , drop

create database leegreen;	//leegreen이라는 데이터베이스 만들어

create table green01( 필드명1 varchar(20) ,	//oo타입의(사이즈) 필드를 적은만큼 만들어
 필드명2 int );

desc green01;	//green01의 필드정보 보여줘

select*from green01;	//green01에 있는거 보여줘

insert into green(1,2,3,4) values(1,2,3,4);

날짜는 '2019-01-27' 이렇게 

select id from green01;	//id만 보여줘

JAR확장자는 라이브러리압축파일 확장자


*******************************************************************************
라이브러리 설정방법
프로젝트 우클릭 -프로퍼티- 왼쪽중에 자바빌드패스-메뉴중 라이브러리즈-오른쪽메뉴중ADD EXternal JARs...-
*******************************************************************************

======================================================================================================
11/21 목요일

insert는 ResultSet 필요없다. state.executeUpdate()를 쓴다.

delete from tempgreen;	//*이라는 개념이 없다: 선택해서 지우는건 불가능하다. 모두 지우는것만 가능

delete from tempgreen where 필드이름=ㅇㅇㅇ; //ㅇㅇㅇ인것만 지운다.

update 테이블명 set 필드이름=새롭게바꿀내용 where 필드이름=ㅇㅇㅇ;	//ㅇㅇㅇ를 새롭게바꿀내용으로 바꾼다.
======================================================================================================
11/22 금요일
DAO (데이타 엑세스 오브젝트)
1. mySQL을 먼저 연다 : Class.forName(컴.mysql.jdbc.드라이버); <<얘는 한번만
2. DB를 연다 : conn=드라이버매니저.겟커넥션(디비URL , 유저네임[루트] , 비밀번호)
3. try~catch~finall 메소드에 넣을 기능
4. 닫기

DAO에서 필요한 5가지 메소드
1. 생성자() : sql 열기
2. DB오픈() : DB 열기
3. 닫기() : 닫기
4. insert() : 
5. select() :


======================================================================================================
11/28 목요일
web
html/html5,css/css3,javascript/jquery
jsp
sql
모바일(js)
spring <<<<<여기까지 포폴 다 끝나있어야한다.
포폴(유지보수)


<!doctype> : 
Markup : 웹페이지가 표시되는 방향을 지시하는것!! 한쌍의 태그로 컨텐츠를 표시한다.
테크(<>ghghghghg<> 이런식)는 짝을이룬다. 

<head>안에 <meta...>라고 써져있는건 지워라 필요없다.


======================================================================================================
11/29 금요일
html

<a href="">dddd</a> : dddd누르면 ""로 이동

<a href="#ccc">dddd</a> : dddd누르면 ccc책갈피로 이동

<h1 id="ccc">ddd</h1> : 책갈피

======================================================================================================
12/02 월요일

<style>안에는 태그만 넣는다.
<div></div> 

#menu li {} : menu안에 있는 li라는 뜻



======================================================================================================
12/06 금요일

프로그램에서 시간은 1/1000초
1000은 1초

myWindow = window.open("", "sample", "toolbar=yes, manubar=yes, width=200, height=200");
======================================================================================================
12/09 월요일

document.getElementById("")

document.getElementById("").innerHTML= "";



document.getElementsByTagName()

document.getElementsByClassName()


.removChild();

<hr /> 선긋기

제이쿼리
$("#win").text("창이 모두 로드");  "#win"자리에는 뭐든 들어간다. 클래스 아이디 체크드 등등





======================================================================================================
12/16월요일




APP
EditText editText = (EditText)findViewById(R.id.editText); << 버튼 등은 먼저 불러와준다.

리스트뷰
ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(this,android.R.layout.simple_list_item_multiple_choice,str); 형식으로 리스트(배열이나 어레이리스트)를 3번째 변수(str)에 넣어준다.
ListView listView = (ListView)findViewById(R.id.list); <<기본형식으로 리스트를 불러오고
listView.setAdapter(arrayAdapter); << 리스트뷰에 위에서 설정한 어댑터를 넣어준다.

이미지뷰 이미지 바꾸기
img.setImageResource(R.drawable.kogi); << drawable에 있는 kogi.png로 바꾼다.

Spinner
spinner.setOnItemSelectedListener
int[] imgid = {R.drawable.kogi,R.drawable.cat,R.drawable.tto}; <<아이디는 int니까 이미지도 담아서 쓰자.

ListView
listView.setOnItemClickListener
listView.setOnItemLongClickListener

RatingBar
ratingBar1.setOnRatingBarChangeListener
>>Toast 사용해서 별 띄울때는 2번째 매게변수에 ""+붙여줘서 String으로 바꿔준다.(객체아니라서 toString()x)

visible
layout.setVisibility(View.VISIBLE); <<layout을 보이도록한다.

CheckBox
cbox1.setOnCheckedChangeListener

arrayAdapter.notifyDataSetChanged(); <<빠르게하기. 리스너 안에 넣는다.


======================================================================================================
12/18수요일
res 우클릭> 안드로이드리소스디렉토리 > menu로 만들기




======================================================================================================
12/19목요일
리스트뷰 한줄에 그림+텍스트 넣을거다
ㄴ어레이어댑터 여러개를 만드는게 아니고 따로 화면(그림+텍스트)을 만들어서 여러번 써먹자
ex)다이얼로그 셋뷰 한것처럼
먼저 레이아웃에 새로xml만들어서 그림+텍스트만 있도록 만든다
그리고 java/com.example...에서 마우스우클릭>자바클래스 새로 만든다.(모델처럼)
여기서 게터세터를 만들거다

imgtextclass[] imgtextclasses = new imgtextclass[10];
        for(int i = 0 ; i<imgtextclasses.length ; i++){
            imgtextclasses[i] = new imgtextclass();
        }

imgtextarray[0].setImg(R.drawable.kogi);
        imgtextarray[0].setName("강아지");
        imgtextarray[1].setImg(R.drawable.cat);
        imgtextarray[1].setName("고양이");
        imgtextarray[2].setImg(R.drawable.tto);
        imgtextarray[2].setName("토끼");
        imgtextarray[3].setImg(R.drawable.rr);
        imgtextarray[3].setName("라이언");
        imgtextarray[4].setImg(R.drawable.logo2);
        imgtextarray[4].setName("축구클럽");
        imgtextarray[5].setImg(R.drawable.kogi);
        imgtextarray[5].setName("빠른강아지");
        imgtextarray[6].setImg(R.drawable.tto);
        imgtextarray[6].setName("빠른토끼");
        imgtextarray[7].setImg(R.drawable.rr);
        imgtextarray[7].setName("빠른라이언");
        imgtextarray[8].setImg(R.drawable.logo2);
        imgtextarray[8].setName("강한축구클럽");
        imgtextarray[9].setImg(R.drawable.cat);
        imgtextarray[9].setName("빠른고양이");


그다음 리스트뷰 불러오고

이너클래스 하나 만드는데 ArrayAdapter 상속받아서 커스텀하자

package com.example.administrator.ex12_19;

import android.content.Context;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    Imgtextclass[] imgtextarray = {new Imgtextclass(R.drawable.kogi,"강아지") , new Imgtextclass(R.drawable.cat,"고양이") ,
            new Imgtextclass(R.drawable.tto,"토끼") , new Imgtextclass(R.drawable.rr,"라이언") ,
            new Imgtextclass(R.drawable.kogi,"강아지") , new Imgtextclass(R.drawable.cat,"고양이") ,
            new Imgtextclass(R.drawable.tto,"토끼") , new Imgtextclass(R.drawable.rr,"라이언") ,
            new Imgtextclass(R.drawable.kogi,"강아지") , new Imgtextclass(R.drawable.cat,"고양이") , };
    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);






        ListView listView = (ListView)findViewById(R.id.list);

        //ArrayAdapter<> arrayAdapter = new ArrayAdapter<>(getApplicationContext(), android.R.layout.);
        Innerclass inner = new Innerclass(getApplicationContext(),R.layout.imgtext,imgtextarray);
        listView.setAdapter(inner);


    }
    class Innerclass extends ArrayAdapter {

        public Innerclass(@NonNull Context context, int resource, Object[] objects) {
            super(context, resource, objects);
        }

        @NonNull
        @Override
        public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {
            LayoutInflater layoutInflater= getLayoutInflater();
            View view = layoutInflater.inflate(R.layout.imgtext,null);
            ImageView img = view.findViewById(R.id.imageView);
            TextView name = view.findViewById(R.id.textView2);

            Imgtextclass inner = imgtextarray[position];
            img.setImageResource(inner.getImg());
            name.setText(inner.getName());



            return view;
        }

    }

}

======================================================================================================
12/20 금요일
mybatis



**************************중요***************************
싱글톤객체
class DAO{
  public static DAO dao; // dao는 싱글톤객체이다. 
}
객체 dao를 하나만 만들어서 돌려쓰기위해서 static으로 만든다.


필요한패키지+xml
user.action
user.bean
user.dao
user.main
DB셋팅.xml

======================================================================================================
12/23 월요일
톰캣
C:\Program Files\Apache Software Foundation\Tomcat 8.5\webapps

http://localhost:8080/ : C:\Program Files\Apache Software Foundation\Tomcat 8.5\webapps 까지의 주소이다.
http://127.0.0.1:8080/

localhost:8080/경로/파일명.확장자

<%!
%>  : 선언문

<%=
%>  : 결과출력

<%@
%>  : import할때 사용


<form action="">
submit 버튼 누르면 form태그 속 내용을 가지고 태그속 action속성으로 연결된 ""로 이동한다.
 ""속 문서는 html은 불가능하다 서버페이지만 정보전달 가능


********************************중요**************************************

request.getParameter("name"); << form에서 가져온 name아이디의 vlaue값을 가져온다.

if(sex.equalsIgnoreCase("man")){ 
		sex = "남자";
	} else {
		sex = "여자";
	}

<form method = "get" action = "Sample3.jsp">

mothod는 전달방식이다.
post는 숨겨서 전달
get은 전부 전달      <<개인정보는 해킹당한다.

********form안에서 받아오는 값은 전부 String***********



Enumeration<String> e = request.getParameterNames();
while(e.hasMoreElements() ) {
		//String name = (String)e.nextElement();
		String name = e.nextElement();
		String[] data = request.getParameterValues(name);
		if( data != null) {
			for( String eachdata : data )
				out.println(eachdata + " ");
		}
		out.println("<p>");
	}

request.getParameterValues(name); << 값 여러개를 받아와서 배열에 담자

======================================================================================================
12/24 화요일
회원가입양식 form에 active=""주고 submit버튼 눌러서
새로운jsp파일에서 받아주고 출력하기
String str=request.getParameter("id");
String[] str = 

------------------------------------------------------------------------


이클립스에서 예제 타이핑(HunderedServlet클래스)
톰캣경로lib에서 servlet-api 라이브러리를 jdk/lib이랑 jdk/jre/lib/ext에 복붙
그리고 라이브러리추가
톰캣경로 webapps에 만들어둔 폴더 안에 WEB-INF라는 폴더 만들고
WEB-INF폴더속에 classes라는 폴더를 만든다.
WEB-INF폴더속에 web.xml을 만든다

classes에는 모든 클래스파일을 담는다. <<아까 예제파이핑했던 클래스파일 여기로(자바파일아님)
web.xml에는 클래스파일등록(일단 아래내용 복붙한다. 선생님이 메모장에 적어준거야)
<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="2.5"> 
    <servlet>
        <servlet-name></servlet-name>
        <servlet-class></servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name></servlet-name>
        <url-pattern></url-pattern>
    </servlet-mapping>
 
</web-app> 

클래스 더 등록하려면
<servlet>
        <servlet-name></servlet-name>
        <servlet-class></servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name></servlet-name>
        <url-pattern></url-pattern>
    </servlet-mapping>
까지만 사이에 추가해주자

servlet-name은 위 아래 두개있는데 그냥 똑같이 맞추기만하면 ㅇㅋ

servlet-class는 클래스파일명 적어준다.(확장자빼고)

url-pattern은 url 쓰고싶은거 적어준다. (hund라고 적어두면 주소는 localhost:8080/hund )

****************************중요********************************
위의 클래스파일과 xml파일등록할때는 톰캣을 stop해두고 해라. 톰캣 죽으면 재설치해야함



======================================================================================================
12/26 목요일
쿠키
웹 브라우저에서 (저장하는) 정보
"오늘 하루 열지 않음" <<이런거

response.addCookie(new Cookie("NAME", "Jogn")); <<쿠키 하나씩 더하기

Cookie cookie = new Cookie("GENDER","Male"); 
cookie.setMaxAge(0); <<얼마동안 유지할지
response.addCookie(cookie); <<쿠키 모아서 더하기



세션
 : 웹 서버 정보

회원가입 -> 로그인 ->**님 로그인 완료
		   ->오류입니다. ->다시 로그인페이지로


session.removeAttribute(""); 특정 세션 삭제


-------------------------------------------------------------

<jsp:include page="Copyright.html"/>


dispatcher.forward(request, response); <<submit같은 작업이다


*********************jstl(자바스탠다드라이브러리)**************************
jstl, standard.jar WEB-INF/lib에 넣는다.
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:set var="str" value="Hello set Tag!!!" scope="session" />
	\${str} = ${str} <br>
	\${sessionScope.str} = ${sessionScope.str} <<<<<<session범위의 str
<<<<<<<<<<<<<<<<<<<<<두가지 방법으로 쓴다.
<<<<<<<<<<<<<<<<<<<<<세팅

<c:remove var="str" scope="page" />
	\${str} = ${str}
<<<<<<<<<<<<<<<<<<remove

scope속성은 범위

\붙이는건 <pre>처럼 그대로 출력하려고 쓰는것


======================================================================================================
12/27 금요일
*************jstl에서의 if문****************
<c:if var="변수명" test="조건식">
	실행문장
</c:if>
********************************************


*************jstl에서의 switch문***************************
<c:choose>
  <c:when test="조건식">          <<c:when이 case
    실행문장1
  </c:when>
  <c:when test="조건식">
    실행문장2
  </c:when>
  <c:otherwise>                   <<c:otherwise가 default
    실행문장3
  </c:otherwise>
</c:choose>
***********************************************************


*************jstl에서의 for문***************************************************************
<c:forEach var="변수(i같은) begin="시작값" end="끝값">
  실행문장
</c:forEach>
********************************************************************************************
<c:forEach var="안에서쓸변수" items = "${MENU}">     <<전페이지에서 받은 배열
  ${"안세서쓸변수"}
<c:forEach>					     <<배열 수만큼 알아서 반복한다.

<ul>
<c:forEach var="안에서쓸변수" items = "${MENU}">     
  <li> ${"안세서쓸변수"} </li>
<c:forEach>
</ul>						     <<이런식으로 목록으로 만드는것도 좋다.
********************************************************************************************

fmt:fotmatNumber    <<대충하자
숫자포맷


******************jsp:useBean*********************************
어레이리스트
<jsp:useBean id = "color" class = "java.util.ArrayList" >
	<%
	  color.add("red");
	  color.add("orange");
	  color.add("green");
	  color.add("blue");
	  color.add("violet");
	%>
</jsp:useBean>

jsp:useBean은 java클래스파일을 가져다 쓰는 태그
**************************************************************

-d . $(FileName)
<<에디트플러스 사용자도구 인수부분에 이렇게 써두면 package폴더 자동생성해서 그 안에 class파일 만든다.

WEB-INF/classes/javabean 안에 있는 클래스파일(ScoreBean) 사용해서 객체(score)만들기
<jsp:useBean id="score" class="javabean.ScoreBean" scope = "page" />

객체(score)에 set하기 jsp:setProperty
<jsp:setProperty name="score" property = "name" value = "나군" />

객체(score)에서 get하기 jsp:getProperty *********3가지 방법********
	<jsp:getProperty name="score" property = "name" />

	${score.name}

	${score["name"]}


======================================================================================================
20-01-13 월요일

안드로이드스튜디오에서 db처리 어떻게?

모듈 UI디자인

p.10
모바일 앱의 유형 
(1)모바일웹 앱
	그냥 html문서 만들어서 모바일 화면에 맞추는것

(2)하이브리드 앱
	html페이지를 어플인것처럼 속이는것(네이버어플)

(3)네이티브 앱
	순수 어플, 모바일OS에 맞게 정확하게 만드는것 (우리가 만드는것)

*********모바일 안에서는 jsp페이지를 못 본다**********
	 왜? jdk가 필요하니까

안드로이드스튜디오 켜고
새 프로젝트 만들고
build.gradle에서 7.28로 바꾸고
버튼 두개 만들고
java에서 버튼 두개 가져와서 클릭이벤트 걸고
예제 써준걸 그대로 넣는다.

Button btn1 = (Button)findViewById(R.id.button);
        Button btn2 = (Button)findViewById(R.id.button2);

        btn1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try{
                    FileOutputStream outFs = openFileOutput("file.txt",Context.MODE_PRIVATE);
                    String str = "안드로이드";
                    outFs.write(str.getBytes());
                    outFs.close();
                    Toast.makeText(getApplicationContext(),"file.txt가 생성됨",Toast.LENGTH_SHORT).show();
                }catch(IOException e){

                }
            }
        });

        btn2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try{
                    FileInputStream inFs = openFileInput("file.txt");
                    byte[] txt = new byte[30];
                    inFs.read(txt);
                    String str = new String(txt);
                    Toast.makeText(getApplicationContext(),str,Toast.LENGTH_SHORT).show();
                    inFs.close();
                }catch (IOException e){
                    Toast.makeText(getApplicationContext(),"파일 없음",Toast.LENGTH_SHORT).show();
                }
            }
        });


SQLite
java페이지 안에서 db를 만들어야한다. 그래야 폰에 저장해두고 나중에 꺼내쓴다.

예제2
레이아웃 사진처럼 만들고
다 불러오고 
이너클래스 만들어서 sql실행문장 씀

final EditText name = (EditText)findViewById(R.id.editText);
        final EditText count = (EditText)findViewById(R.id.editText2);
        Button reset = (Button)findViewById(R.id.button5);
        Button input = (Button)findViewById(R.id.button4);
        Button select = (Button)findViewById(R.id.button3);
        textView = (TextView)findViewById(R.id.textView3);


        //dbhelper
        class myDBHelper extends SQLiteOpenHelper{
            public myDBHelper(Context context){
                super(context,"groupDB",null,1);
            }
            @Override
            public void onCreate(SQLiteDatabase db){
                db.execSQL("CREATE TABLE grouptable( gName CHAR(20), gNumber INTEGER);");
            }
            @Override
            public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){
                db.execSQL("DROP TABLE IF EXISTS grouptable");
                onCreate(db);
            }
        }
======================================================================================================
2020-01-17 금요일

MVC2패턴

파일명세서
a.jsp : 전체 제이터 출력 페이지
index.jsp : 웹서블릿 방식으로 BoardFrontController.java 호출해서 forward객체만들어서 setPath메소드로 href안에 문장을 qna_board_write.jsp로 바꿔서 이동

qna_board_write.jsp : 폼입력받아서 submit해줌 ->웹서블릿 방식으로 BoardFrontController.java 호출해서 submit으로 받은 폼내용을 매개변수로 BoardWriteProAction.java의 execute메소드 호출 -> 

BoardWriteProAction :  받은 사진 boardUpload폴더에 저장하고 MultipartRequest는 파일 저장하는것같은데 realFolder경로가 ""인걸 봐서는 아직 안 하는듯
-> BoardBean 객체 만들어서 request로 받은거에서 이름 비번 제목 내용 파일 저장함(위에 realFolder에 저장하면 이게 객체에 들어감)
이제 BoadWriteProService.java 객체 만들어서 위에서 세팅해둔 객체를 매개변수로 registArticle메소드 호출

BoadWriteProService.java : BoardDAO 객체 만들어서 insertArticle메소드 실행(매게변수는 아까만든 객체)

BoardDAO.java insertArticle : 먼저 가장높은 넘버 가져와서 +1해서 num변수에 저장 -> sql실행문장으로 prepareStatement(실행문장)으로 객체(?)에 담는다(?처음보는것)(dfsdf콘솔에출력) -> 아까 매개변수로 가져온 객체(article)이랑 num이랑을 다 세팅해주고 executeUpdate()로 드디어 insert해준다.-> 이제 실행결과 쿼리값(insertCount)을 반환해주고 BoadWriteProService.java로 돌아감

BoadWriteProService.java : 반환받은 값이 0보다 크면(잘 들어갔으면) 불리언변수 isWriteSuccess를 true로 바꿔주고 이걸 반환값으로해서 BoardWriteProAction로 돌아감

BoardWriteProAction.jsp : 이제 반환값 isWiteSuccess 출력한번 해주고 얘가 false이면 등록실패경고창 띄우고 뒤로가기
true이면 ActionForward생성자호출하고 forward객체만들어서 그 안에 isRedirect변수 true로 세팅, path는 boardList.bo로 세팅하고 반환으로 호출했던 BoardWriteProAction.java로 넘겨준다

BoardWriteProAction.java : 이제 forward객체가 null이 아니면 if문 들어가고
아까 true로 셋한 redirect get해서 true이면 if문 들어가서 sendRedirect()로 forward에서 path(boardList.bo)를 get해와서 이동한다. 그럼 웹서블릿방식으로 다시 BoardFrontController.java 호출한다.

-----------------------------insert 끝----------------------------

BoardFrontController.java : command가 borderList.bo니까 BoardListAction.java의 execute()호출

BoardListAction.java : ArrayList만든다, request에 "page"키의 값 가져와서 null이면 int변수page 1로 초기화
BoardListService.java객체 만들어서 getListCount()메소드 호출해서 "select count(*) from board"실행문장으로 글 갯수 가져와서 listCount변수에 담아서 반환해줘서 int listCount로 받아줌 -> page(1)이랑 limit(10)매개변수로 getArticleList()호출
->dao의 selectArticleList()호출 리스트 정렬하고 싹다 가져와서 객체에 담아서 리스트로 반환해줌 ->BoardListService.java의 getArticleList메소드 돌아와서 articleList로 받아주고 이걸 반환-> 다시 BoardListAction로 돌아옴

BoardListAction : articleList(어레이리스트) 받아주고 블라블라 페이지수 처리하고 페이지정보는 pageInfo객체 만드러서 셋하고 request.setAttribute로 세팅, articleList(아까반환받은 어레이리스트)도 똑같이 세팅해주고 forward에 path값 qna_board_list.jsp로 세팅해주고 forward 반환하면서 BoardFrontController.java로 돌아옴
-> 이제 위에서 설정한 forward의 path로(qna_board_list.jsp) sendRedirect() 해서 간다

qna_board_list.jsp :
request.getAttribute로 "articleList"랑 "pageInfo"가져와서 화면에 뿌려줌
글 제목 누르면 boardDetail.bo에 num이랑 페이지 가지고 href한다.
















게시물입력
a.jsp -> b.java -> c.java ->























